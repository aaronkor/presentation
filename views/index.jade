!!! 5

html
  head
    meta(charset='uft-8')
    title Intorduction to Node.js | SOA University | Aaron Kor

    //stylesheets
    link(rel='stylesheet', href='media/css/font.css')
    link(rel='stylesheet', href='media/css/default.css')
    link(rel='stylesheet', href='media/highlight/styles/sunburst.css')

  body
    //impress
    #impress.impress-not-supported
      #fm1.fallback-message.hidden
        p Your browser does not support the features required by impress.js
      
      #fm1.fallback-message
        p Your browser's fine, but somehting is wrong

      #introduction.step
        h2 Introduction to
        br
        h1
          strong node.js
        #node-logo
        p.footer Aaron Kor &nbsp&nbsp| &nbsp&nbspSOA University&nbsp&nbsp |&nbsp&nbsp Feb 2012

      #nodejs-is.step
        h2 node.js is
        ul
          li Server-side JavaScript
          li Mainly for network oriented applications
          li Built on top of Google V8 engine
          li CommonJS support
          li
            strong Event-driven, non blocking I/O

      #io-expensive.step
        h2 The I/O is expensive
        img(id='io', class='centered', src='media/img/io-cost.png', alt='The cost of I/O')

      #deal.step
        center
          h3 How to deal with it?
        ol.center
          li Synchronous
          li Process forking
          li Multi-threaded
      
      #yay.step
        center
          h3 How to deal with it?
        ol.center
          li Synchronous
          li Process forking
          li 
            | Multi-threaded 
            b
              i Yay!

      #rocky-vs-drago.step
        center
          img(id='rocky', class='centered', src='media/img/Rocky-vs-Drago.jpg', alt='Rocky vs Drago')
          br
          strong Apache vs Nginx
      
      #graphs.step
        center
          img(class="graph", src="media/img/nginx-apache-reqs-sec.png", alt="Apache vs Nginx - Requests per second")
          br
          img(class="graph", src="media/img/nginx-apache-memory.png", alt="Apache vs Nginx - Memory")
          br
          p (No mo graphs, me promise...)

      #difference.step
        h2 The difference?
        center
          p
            b Apache
            &nbsp;- uses thread per connection
          p
            b Nginx
            &nbsp;- uses event loop

      #threads-wrong.step
        center
          h3 So, what's wrong with threads?
        ul
          li Context switching is not free
          li Execution stacks take up memory

      #in-node.step
        h2 In node.js
        center
          h3 everything runs in parallel
          h3#except
            | EXCEPT YOUR CODE

      #king.step
        center
          img(src='media/img/king.png', alt='king image')

      #node-query.step
        p A conventional code
        pre
          code
            | var result = db.query("select ...");
            | // use result

        p will be written in node as
        pre
          code
            | db.query("select ...", function (result) {
            |   // use result
            | });

      #timeout-example.step
        p For example
        pre
          code
            | setTimeout( function () {
            |   console.log("DARY!");
            | }, 5000);
            | console.log("LEGEN...");
          a(href='#', onClick='invokeTimeoutExample()')
            i Run!
        p will yield
        
        pre
          code#timeoutOutput &nbsp

      #write-code.step
        h1 Shall we write some code?

      #cloudST-1.step
        h1 CloudST
        h2 The cornerstone
        p
          br
        p
          br
      
      #cloudST-2.step
        h1 CloudST
        h2 The cornerstone
        center
          p Concatenate strings with pleasure
          p#incloud
            | in cloud...
      
      #npm.step
        center
          h3 The 
            b NPM 
            i (node package manager)
          center
            p 
              i Uses 
                b package.json 
        pre
          code
            | {
            |   "name" : "node-presentation",
            |   "version" : "0.0.1",
            |   "author" : "Aaron Kor",
            |   "description" : "A node.js presentation",
            |   "dependencies": {
            |     "express" : "2.5.x",
            |     "jade" : "0.20.x",
            |     "socket.io" : "0.8.7"
            |   },
            |   "engine" : {
            |     "node" : ">=0.6"
            |   }
            | }
           
      #packages.step
        h2 Some popular packages
        ul
          li express
          li socket.io
          li jade, stylus
          li mongodb, redis
          li vows
          li 
            b and thousands more...

      #sum-up.step
        center
          h2 To sum it up
        br
        img(id='ryah-tweet', class='centered', src='media/img/ryah-tweet.png', alt='Ryan Dahl tweet');

      #thanks.step
        h2 Thanks.
        center
          br
          p presentation available at
          a(href='http://www.github.com/aaronkor/presentation')
            | http://www.github.com/aaronkor/presentation
          p.footer Aaron Kor

      #overview.step
      //end of all steps

      //javascripts
      script(src='media/highlight/highlight.pack.js')
      script(src='media/js/impress.js')
      script(src='media/js/default.js')
      script(src='socket.io/socket.io.js')
      script(type='text/javascript')
        
        function writeOutput(text) {
          var field = document.getElementById('timeoutOutput').childNodes[0];
          if(field) {
            field.textContent += text;
          }
        }

        var socket = io.connect('http://localhost:8080');
        socket.on('timeout-example-response', function(data) {
          console.log(data);
          writeOutput(data);
        });

        function invokeTimeoutExample () {
          console.log('invokeTimeoutExample');
          writeOutput('\\n');
          socket.emit('timeout-example-request', null);
        }
